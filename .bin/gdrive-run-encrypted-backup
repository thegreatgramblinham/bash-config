#!/usr/bin/env bash
# This command is intended run on a machine with
#  - rclone set up with a 'gdrive-remote' remote
#  - a 'GDrive-Key' gpg key

while getopts 't:' OPTION; do
    case "$OPTION" in
        t)
            #Target directory
            targetDir="$OPTARG"
            if [[ "." == "$targetDir" ]]; then
                echo "Script cannot target the current directory. Please move up a directory level and enter the directory name."
                exit 1
            fi
            ;;
        ?)
            echo "Invalid usage!"
            echo "gdrive-run-encrypted-backup [-t target_directory_to_encrypt_and_sync]"
            exit 1;
            ;;
    esac
done


if [[ ! -d "$targetDir" ]]; then
    echo "Target directory to encrypt and upload doesn't exist. Exiting..."
    exit 1
fi

# Build an archive name with the directory and timestamp
baseName=$(basename "$targetDir")
currentDate=$(date '+%Y-%m-%d')
tarName="$baseName-$currentDate.tar.gpg"

# If we are working with a directory that is not in our PWD, move there.
# For whatever reason, gpgtar only works on directories in the PWD. Not paths.
dirname=$(dirname "$targetDir")
if [[ ! -z "$dirname" ]]; then
    cd "$dirname" || (echo ">Target directory does not exist. Exiting..."; exit 1)
    echo ">Moving to $dirname"
fi

# TODO this is not going to work due to the entire directory being loaded into
# memory. So we will have to go through each file one by one.
# TODO also that recursive encrypting code needs to be a separate script
# Make an encrypted tar out of the target directory
echo ">Attmepting to build $tarName..."
if sudo gpgtar --encrypt --output "$tarName" -r 'GDrive-Key' "$baseName"; then
    echo ">Creating gpgtar failed. Exiting..."
    exit 1
fi

# Move that tar to the directory syncing with Google Drive via rclone
googleDriveSyncDir="/mnt/gdrive-sync"
if [[ ! -d $googleDriveSyncDir ]]; then
    echo ">Google Drive sync directory does not exist."
    echo ">Cleaning up tar.gpg..."
    rm "$tarName"
    echo ">Exiting..."
fi
echo ">Moving to $tarName"
sudo mv "$tarName" "$googleDriveSyncDir/$tarName"

if [[ ! -e "$googleDriveSyncDir/$tarName" ]]; then
    echo ">$tarName could not be found in the target directoy. Aborting..."
    exit 1
fi

# Run the sync operation on that directory to 'push' the changes
googleDriveRemoteName="gdrive-remote"
echo ">Attempting to sync $googleDriveSyncDir to $googleDriveRemoteName..."
rclone sync "$googleDriveSyncDir" "$googleDriveRemoteName":

